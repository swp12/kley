#!/bin/bash
# Made by Pserg
# Version: 1.1

if [ $# -lt 1 ]; then
    echo usage:  error.
    exit 1
fi

domain=$1

PATH=$PATH:/usr/local/vesta/bin
export PATH

user=$(/usr/local/vesta/bin/v-search-domain-owner $domain)

# email="info@$domain";
if [ $# -gt 1 ]; then
    newdomain=$2
fi
if [ -z "$user" ]
then
echo ""
      echo "\$user is empty $3"
	  echo ""
	  user=$3
else
echo ""
      echo "\$user is NOT empty"
	  echo ""
fi
if [ ! -d "/home/$user" ]; then
    echo "User doesn't exist";
    exit 1;
fi

#v-add-web-domain $user $domain
/usr/local/vesta/bin/v-add-domain $user $newdomain
# if [ ! -d "/home/$user/web/$domain/public_html" ]; then
# /usr/local/vesta/bin/v-add-domain $user $domain
#     #echo "Domain doesn't exist";
#     #exit 1;
# 	user=$(/usr/local/vesta/bin/v-search-domain-owner $domain)
# # 	if [ ! -d "/home/$user/web/$domain/public_html" ]; then
# # 
# #     echo "OLd domain doesn't exist";
# #     exit 1;
# # 	
# # fi
# fi
#cd "/home/$user/web/$domain/public_html"
#wget http://wordpress.org/latest.tar.gz
#tar xfvz latest.tar.gz
#echo ""
#echo "done."
#exit 1;
# if [ ! -f "/home/$user/conf/web/ssl.$domain.pem" ]; then
#     v-add-letsencrypt-domain "$user" "$domain" "" "yes"
# 
#     if [ -f "/usr/local/vesta/data/templates/web/nginx/force-https.stpl" ]; then
#         v-change-web-domain-proxy-tpl  "$user" "$domain" "force-https" "jpeg,jpg,png,gif,bmp,ico,svg,tif,tiff,css,js,htm,html,ttf,otf,webp,woff,txt,csv,rtf,doc,docx,xls,xlsx,ppt,pptx,odf,odp,ods,odt,pdf,psd,ai,eot,eps,ps,zip,tar,tgz,gz,rar,bz2,7z,aac,m4a,mp3,mp4,ogg,wav,wma,3gp,avi,flv,m4v,mkv,mov,mpeg,mpg,wmv,exe,iso,dmg,swf" "no"
#     fi
# fi

WORKINGDIR="/home/$user/web/$newdomain/public_shtml"
# FILE=latest.tar.gz

rm -rf $WORKINGDIR/*

cp -r /home/$user/web/$domain/public_html/. /home/$user/web/$newdomain/public_shtml
echo "~~~~================================================================="
echo " Moved files to temp directory /home/$user/web/$newdomain/public_shtml" 
#DBUSERSUF=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 5 | head -n 1)
# DBUSERSUFB="wp";
# i=0;
# while [ $i -lt 99 ]
# do
# i=$((i+1));
# DBUSERSUF="${DBUSERSUFB}${i}";
# DBUSER=$user\_$DBUSERSUF;
# if [ ! -d "/var/lib/mysql/$DBUSER" ]; then
# break;
# fi
# done
# PASSWDDB=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1)
# 
# v-add-database $user $DBUSERSUF $DBUSERSUF $PASSWDDB mysql
# 
# cd /home/$user
# 
# rm -rf /home/$user/wp
# curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
# chmod +x wp-cli.phar
# sudo mv wp-cli.phar wp
# 
# cd /home/$user/web/$domain/public_html
# 
# sudo -H -u$user /home/$user/wp core download
# sudo -H -u$user /home/$user/wp core config --dbname=$DBUSER --dbuser=$DBUSER --dbpass=$PASSWDDB
# 
# password=$(LC_CTYPE=C tr -dc A-Za-z0-9_\!\@\#\$\%\^\&\*\(\)-+= < /dev/urandom | head -c 12)
# 
# sudo -H -u$user /home/$user/wp core install --url="$domain" --title="$domain" --admin_user="admin" --admin_password="$password" --admin_email="$email" --path=$WORKINGDIR
# 
# #FIX za https://github.com/wp-cli/wp-cli/issues/2632
# 
# mysql -u$DBUSER -p$PASSWDDB -e "USE $DBUSER; update wp_options set option_value = 'http://$domain' where option_name = 'siteurl'; update wp_options set option_value = 'http://$domain' where option_name = 'home';"
# 
# # clear
# /////user=$(/usr/local/vesta/bin/v-search-domain-owner $domain)
wpdbname=$(cat /home/$user/web/$newdomain/public_shtml/wp-config.php | grep DB_NAME | cut -d \' -f 4)
wpdbuser=$(cat /home/$user/web/$newdomain/public_shtml/wp-config.php | grep DB_USER | cut -d \' -f 4)
wpdbpass=$(cat /home/$user/web/$newdomain/public_shtml/wp-config.php | grep DB_PASSWORD | cut -d \' -f 4)

echo ""
echo "DB_NAME: $wpdbname"
echo ""
echo "DB_USER: $wpdbuser"
echo ""
echo "DB_PASSWORD: $wpdbpass"
echo ""

mysqldump -u $wpdbuser -p$wpdbpass $wpdbname  > /home/$user/web/$newdomain/public_shtml/dump.sql
sed -i   "s/$domain/$newdomain/g" /home/$user/web/$newdomain/public_shtml/dump.sql
uniq=$(cat /proc/sys/kernel/random/uuid | cut -c1-3)
newdbname=datbas$uniq
newdbuser=datbas$uniq
newpass=$(cat /proc/sys/kernel/random/uuid | cut -c1-16)

v-add-database $user $newdbname $newdbuser $newpass

echo "Created new database"
echo ""
echo "NEW DB_NAME: admin_$newdbname"
echo ""
echo "NEW DB_USER: admin_$newdbuser"
echo ""
echo "NEW DB_PASSWORD: $newpass"
echo ""

mysql -u admin_$newdbuser -p$newpass admin_$newdbname < /home/$user/web/$newdomain/public_shtml/dump.sql

echo "Updated new database"
echo ""

sed -i   "s/$domain/$newdomain/g" /home/$user/web/$newdomain/public_shtml/wp-config.php
sed -i   "s/$wpdbname/admin_$newdbname/g" /home/$user/web/$newdomain/public_shtml/wp-config.php
sed -i   "s/$wpdbuser/admin_$newdbuser/g" /home/$user/web/$newdomain/public_shtml/wp-config.php
sed -i   "s/$wpdbpass/$newpass/g" /home/$user/web/$newdomain/public_shtml/wp-config.php
sed -i   "s/$domain/$newdomain/g" /home/$user/web/$newdomain/public_shtml/robots.txt

echo "Changed wp-config.php and robots.txt"
echo ""

find /home/$user/web/$newdomain/public_html/ -name 'yandex*html'  -delete
rm /home/$user/web/$newdomain/public_shtml/dump.sql

echo "Deleted yandex file and dump"
echo ""

cp -r /home/$user/web/$newdomain/public_shtml/. /home/$user/web/$newdomain/public_html

echo "Moved files to /home/$user/web/$newdomain/public_html"
echo ""

rm -rf /home/$user/web/$newdomain/public_shtml/*

echo "Deleted temp files from /home/$user/web/$newdomain/public_shtml"
echo "" 

echo "=================================================================~~~~"

chown -R $user:$user $WORKINGDIR

rm -rf /home/$user/wp

echo "v-sam-create-wp: Done."
exit 0
